name: meksmith.rs workflow

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    name: meksmith.rs check
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Rust + extra components
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Check the package and dependencies for errors
        run: cargo check

      - name: Run cargo check (all features)
        run: cargo check --benches --examples --tests --verbose --all-features

      - name: Run cargo check (no features)
        run: cargo check --benches --examples --tests --verbose --no-default-features

      - name: Run cargo clippy
        run: cargo clippy --benches --examples --tests --verbose --all-features -- -D warnings

      - name: Check the formatting of the code
        run: cargo fmt --all --verbose --check

      - name: Check the documentation
        run: cargo doc --no-deps --document-private-items --all-features

  test:
    name: meksmith.rs test
    runs-on: ubuntu-latest
    needs: check
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install Rust + extra components
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt, clippy

      - name: Run unit and integration tests
        run: cargo test --verbose --all-features

  build-website:
    name: meksmith.rs website build
    runs-on: ubuntu-latest
    needs: [check, test]
    defaults:
      run:
        working-directory: website
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Add wasm target
        run: rustup target add wasm32-unknown-unknown

      - name: Install trunk
        uses: jetli/trunk-action@v0.5.1
        with:
          version: "latest"

      - name: Build project
        run: trunk build --release --public-url /

      - name: Copy .htaccess to dist
        run: cp .htaccess dist/.htaccess

      - name: Upload website/dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: website-dist
          path: website/dist
          include-hidden-files: true

  deploy:
    name: deploy website to OVH
    runs-on: ubuntu-latest
    needs: [build-website]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    defaults:
      run:
        working-directory: website
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Download website/dist artifact
        uses: actions/download-artifact@v4
        with:
          name: website-dist
          path: website/dist

      - name: Upload via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_HOST }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: website/dist/
          server-dir: /meksmith/
          dangerous-clean-slate: true
